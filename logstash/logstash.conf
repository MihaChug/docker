input {
  beats{
   port => 5044
   client_inactivity_timeout => 86400
 }
}
filter {

#NGINX
 if [type] == "nginx-access" {
  grok {
    match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
    overwrite => [ "message" ]
  }
  mutate {
    convert => ["response", "integer"]
    convert => ["bytes", "integer"]
    convert => ["responsetime", "float"]
  }
  geoip {
    source => "clientip"
    target => "geoip"
    add_tag => [ "nginx-geoip" ]
  }
  date {
    match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
    remove_field => [ "timestamp" ]
  }
  useragent {
    source => "agent"
  }
 }

#APACHE
 if [type] == "apache-access" {
  grok {
   match => { "message" => "%{COMBINEDAPACHELOG}" }
  }
  date {
   match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
  }
  # Extraction browser information, if available.
  if [agent] != "" {
     useragent {
    source => "agent"
   }
  }
  if [clientip] != "" {
   geoip {
    source => "clientip"
    target => "apache_clientip"
    add_tag => [ "geoip" ]
   }
  }
  if [type] == 'apache-error' {
   grok {
    match => [ 'message', '\[(?<timestamp>%{DAY:day} %{MONTH:month} %{MONTHDAY} %{TIME} %{YEAR})\] \[%{WORD:class}\] \[%{WORD:originator} %{IP:clientip}\] %{GREEDYDATA:errmsg}']
   }
  }
 }
}

output {
 elasticsearch {
   hosts => ["elasticsearch:9200"]
   manage_template => false
   index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
   document_type => "%{[@metadata][type]}"
 }
 stdout { codec => rubydebug }
}

